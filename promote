#!/usr/bin/env bash

set -eo pipefail

################################################################################
# Validate Inputs
################################################################################

function usage {
    echo "usage: $0 [namespace] [tag]"
    echo "  namespace    namespace to promote the image (eg. production)"
    echo "  overlay      kustomize overlay to apply (eg. indigo)"
    echo "  tag          tag of the image version (eg. latest)"
    exit 1
}

[ -z "$1" ] && { usage; }

################################################################################
# Set Inputs
################################################################################

NAMESPACE=$1
OVERLAY=$2
TAG=$3

echo "TAG IS $TAG"
echo "OVERLAY IS $OVERLAY"
echo "NAMESPACE IS $NAMESPACE"

# ################################################################################
# # Constants
# ################################################################################

# DIR="$(dirname "${BASH_SOURCE[0]}")"
# ROOT="$(readlink -f ${DIR}/../../)"
# DEPLOY="${ROOT}/deploy"

# ################################################################################
# # Setup Environment
# ################################################################################

# source ${DIR}/env

# ################################################################################
# # Set Variables
# ################################################################################

# REPOSITORY="$ENDPOINT/$APP"
# IMAGE="$REPOSITORY:$TAG"

# ################################################################################
# # Login to AWS
# ################################################################################

# $(aws ecr get-login --no-include-email)

# ################################################################################
# # Switch Context
# ################################################################################

# aws eks update-kubeconfig --name $CLUSTER

# ################################################################################
# # Create build directory
# ################################################################################

# rm -rf $DEPLOY
# cp -rf ${ROOT}/k8s $DEPLOY

# ################################################################################
# # Run PreRelease
# ################################################################################

# ${DIR}/pre-release $NAMESPACE $TAG

# ################################################################################
# # Set properties
# ################################################################################

# pushd $DEPLOY/overlays/$OVERLAY
# kustomize edit set image unset=$REPOSITORY:$TAG
# popd

# ################################################################################
# # Generate Schema
# ################################################################################

# kustomize build $DEPLOY/overlays/$OVERLAY -o $DEPLOY/patch.yaml

# ################################################################################
# # Update Cluster
# ################################################################################

# kubectl apply -f $DEPLOY/patch.yaml -n $NAMESPACE --wait

# ################################################################################
# # Wait for Deployments
# ################################################################################

# ${DIR}/wait $NAMESPACE
