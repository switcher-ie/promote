#!/usr/bin/env bash

set -eo pipefail

################################################################################
# Validate Inputs
################################################################################

function usage {
    echo "usage: $0 [namespace] [overlay] [tag] [app]"
    echo "  namespace    namespace to promote the image (eg. production)"
    echo "  overlay      kustomize overlay to apply (eg. indigo)"
    echo "  tag          tag of the image version (eg. latest)"
    echo "  app          slug of the app (eg. broadband-plans)"
    exit 1
}

[ -z "$4" ] && { usage; }

################################################################################
# Set Inputs
################################################################################

NAMESPACE=$1
OVERLAY=$2
TAG=$3
APP=$4

################################################################################
# Constants
################################################################################

DIR="$(dirname "${BASH_SOURCE[0]}")"

################################################################################
# Set Variables
################################################################################

BUILD_IMAGE="ghcr.io/switcher-ie/$APP:$TAG.build"
RELEASE_IMAGE="$ECR_ENDPOINT/$APP:$TAG"

################################################################################
# Pull Build Image
################################################################################

docker pull "$BUILD_IMAGE"

################################################################################
# Tag & Push Release Image
################################################################################

docker tag "$BUILD_IMAGE" "$RELEASE_IMAGE"
docker push "$RELEASE_IMAGE"

################################################################################
# Switch Context
################################################################################

aws eks update-kubeconfig --name $EKS_CLUSTER

################################################################################
# Run PreRelease
################################################################################

${DIR}/pre-release "${NAMESPACE}" "${TAG}" "${APP}"

################################################################################
# Set properties
################################################################################

pushd k8s/overlays/$OVERLAY
kustomize edit set image unset=$RELEASE_IMAGE
popd

################################################################################
# Generate Schema
################################################################################

kustomize build k8s/overlays/$OVERLAY -o k8s/patch.yaml

################################################################################
# Update Cluster
################################################################################

kubectl apply -f k8s/patch.yaml -n $NAMESPACE --wait

################################################################################
# Wait for Deployments
################################################################################

${DIR}/wait $NAMESPACE
