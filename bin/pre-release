#!/usr/bin/env bash

set -eo pipefail

################################################################################
# Validate Inputs
################################################################################

function usage {
    echo "usage: $0 [namespace] [tag]"
    echo "  namespace    namespace to promote the image (eg. production)"
    echo "  tag          tag of the image version (eg. latest)"
    echo "  app          slug of the app (eg. broadband-plans)"
    exit 1
}

[ -z "$3" ] && { usage; }

################################################################################
# Set Inputs
################################################################################

NAMESPACE=$1
TAG=$2
APP=$3

################################################################################
# Set Variables
################################################################################

REPOSITORY="$ECR_ENDPOINT/$APP"

################################################################################
# Constants
################################################################################

DIR="$(dirname "${BASH_SOURCE[0]}")"

################################################################################
# Execute Pre Release Scripts
################################################################################

PRE_RELEASE_LABEL_NAME="${APP}/pre-release"

for directory in k8s/pre-release/*; do
  [ -d "$directory" ] || continue

  PRE_RELEASE_NAME=$(basename "$directory")
  PRE_RELEASE_RUN_ID="${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}"
  PRE_RELEASE_ID="${PRE_RELEASE_NAME}-${PRE_RELEASE_RUN_ID}"

  echo "::group::${PRE_RELEASE_ID}"

  pushd "$directory"
  kustomize edit set image unset=$REPOSITORY:$TAG
  kustomize edit set namesuffix -- "-${PRE_RELEASE_RUN_ID}"
  kustomize edit set label "${PRE_RELEASE_LABEL_NAME}:${PRE_RELEASE_ID}"
  popd

  kubectl apply --kustomize "$directory" --namespace "$NAMESPACE"
  kubectl wait --namespace "$NAMESPACE" --for=condition=complete --selector="${PRE_RELEASE_LABEL_NAME}=${PRE_RELEASE_ID}" --timeout=15m job

  echo "::endgroup::"
done

if [ "$APP" == "cms" ]; then
  ${DIR}/pre-release-scripts/push-cms-assets $NAMESPACE $TAG
fi
